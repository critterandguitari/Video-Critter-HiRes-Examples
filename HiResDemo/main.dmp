
main.out:     file format elf32-littlearm
main.out
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x0000445e memsz 0x0000445e flags r-x
    LOAD off    0x00010000 vaddr 0x40000000 paddr 0x00004460 align 2**15
         filesz 0x00000018 memsz 0x00000018 flags rw-
    LOAD off    0x00010018 vaddr 0x40000018 paddr 0x40000018 align 2**15
         filesz 0x00000000 memsz 0x0000583c flags rw-
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001570  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00002eee  00001570  00001570  00009570  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000018  40000000  00004460  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          0000583c  40000018  40000018  00010018  2**2
                  ALLOC
  4 .comment      0000005a  00000000  00000000  00010018  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00010072  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000003ba  00000000  00000000  00010112  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000d40  00000000  00000000  000104cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000409  00000000  00000000  0001120c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000045e  00000000  00000000  00011615  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000041c  00000000  00000000  00011a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003d1  00000000  00000000  00011e90  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 
00001570 l    d  .rodata	00000000 
40000000 l    d  .data	00000000 
40000018 l    d  .bss	00000000 
00000000 l    d  .comment	00000000 
00000000 l    d  .debug_aranges	00000000 
00000000 l    d  .debug_pubnames	00000000 
00000000 l    d  .debug_info	00000000 
00000000 l    d  .debug_abbrev	00000000 
00000000 l    d  .debug_line	00000000 
00000000 l    d  .debug_frame	00000000 
00000000 l    d  .debug_str	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l    d  *ABS*	00000000 
00000000 l     F .text	00000000 $a
00000024 l       .text	00000000 reset
000000f8 l       .text	00000000 loop
00000020 l       .text	00000000 fiq_addr
00000020 l     O .text	00000000 $d
00000024 l     F .text	00000000 $a
00000100 l       .text	00000000 PLLBASE
00000024 l       *ABS*	00000000 PLLCFG_VALUE
00000004 l       *ABS*	00000000 PLLCFG_OFFSET
00000001 l       *ABS*	00000000 PLLCON_PLLE
00000000 l       *ABS*	00000000 PLLCON_OFFSET
000000aa l       *ABS*	00000000 PLLFEED1
00000055 l       *ABS*	00000000 PLLFEED2
0000000c l       *ABS*	00000000 PLLFEED_OFFSET
00000048 l       .text	00000000 pll_loop
00000008 l       *ABS*	00000000 PLLSTAT_OFFSET
00000400 l       *ABS*	00000000 PLLSTAT_PLOCK
00000002 l       *ABS*	00000000 PLLCON_PLLC
00000064 l       .text	00000000 mam_init
00000104 l       .text	00000000 MAMBASE
00000002 l       *ABS*	00000000 MAMCR_VALUE
00000000 l       *ABS*	00000000 MAMCR_OFFSET
00000004 l       *ABS*	00000000 MAMTIM_VALUE
00000004 l       *ABS*	00000000 MAMTIM_OFFSET
00000078 l       .text	00000000 stacks_init
000000fc l       .text	00000000 STACK_START
00000011 l       *ABS*	00000000 FIQ_MODE
00000080 l       *ABS*	00000000 IRQ_DISABLE
00000040 l       *ABS*	00000000 FIQ_DISABLE
00000080 l       *ABS*	00000000 FIQ_STACK_SIZE
00000012 l       *ABS*	00000000 IRQ_MODE
00000080 l       *ABS*	00000000 IRQ_STACK_SIZE
00000013 l       *ABS*	00000000 SVC_MODE
00000080 l       *ABS*	00000000 SVC_STACK_SIZE
0000001b l       *ABS*	00000000 UND_MODE
00000010 l       *ABS*	00000000 UND_STACK_SIZE
00000017 l       *ABS*	00000000 ABT_MODE
00000010 l       *ABS*	00000000 ABT_STACK_SIZE
0000001f l       *ABS*	00000000 SYS_MODE
000000c0 l       .text	00000000 runtime_init
00000108 l       .text	00000000 data_source
0000010c l       .text	00000000 data_start
00000110 l       .text	00000000 data_end
000000cc l       .text	00000000 copy_data
00000114 l       .text	00000000 bss_start
00000118 l       .text	00000000 bss_end
000000e8 l       .text	00000000 clear_bss
000000fc l     O .text	00000000 $d
00000400 l       *ABS*	00000000 SYS_STACK_SIZE
00000000 l    df *ABS*	00000000 main.c
0000011c l     F .text	00000000 $a
00000000 l    df *ABS*	00000000 video.c
40000000 l     O .data	00000000 $d
4000002c l       .bss	00000000 pixelCount
000005cc l     F .text	00000000 $a
00000728 l     O .text	00000000 $d
00000740 l     F .text	000001c0 timer0ISR
0000072c l     F .text	00000000 $a
000008e4 l     O .text	00000000 $d
00000900 l     F .text	00000000 $a
000009dc l     O .text	00000000 $d
00000000 l    df *ABS*	00000000 audio.c
40000008 l     O .data	00000010 level
40000008 l     O .data	00000000 $d
40005830 l       .bss	00000000 phaseDelta
40005840 l       .bss	00000000 phaseAccum
000009e8 l     F .text	00000000 $a
00000a28 l     O .text	00000000 $d
00000a30 l     F .text	00000000 $a
00000b44 l     O .text	00000000 $d
00000000 l    df *ABS*	00000000 system.c
00000b64 l     F .text	00000000 $a
00000000 l    df *ABS*	00000000 graphics.c
00000e50 l     F .text	00000000 $a
00000e9c l     O .text	00000000 $d
00000ea4 l     F .text	00000000 $a
00000ef4 l     O .text	00000000 $d
00000ef8 l     F .text	00000000 $a
00000f38 l     O .text	00000000 $d
00000f3c l     F .text	00000000 $a
000010bc l     O .text	00000000 $d
000010c8 l     F .text	00000000 $a
000011ac l     O .text	00000000 $d
000011b8 l     F .text	00000000 $a
0000129c l     O .text	00000000 $d
000012a8 l     F .text	00000000 $a
00001334 l     O .text	00000000 $d
00001338 l     F .text	00000000 $a
40000830 g     O .bss	00005000 imageArray
00000ea8 g     F .text	00000050 fill_screen
000010c8 g     F .text	000000f0 put_char_arial24
00000144 g     F .text	0000002c start_ms_timer
00000e20 g     F .text	00000030 UNDEF_Routine
0000245a g     O .rodata	00000060 arial24Width
000009e8 g     F .text	00000018 audio_init
00004460 g       *ABS*	00000000 _etext
00000b90 g     F .text	0000002c led_card_init
0000421e g     O .rodata	00000060 arial32Width
40000024 g     O .bss	00000004 soundBufW
00000f3c g     F .text	00000054 draw_square
00002b62 g     O .rodata	000015fc arial32
40000004 g     O .data	00000004 syncOn
40000000 g     O .data	00000004 syncOff
00002b02 g     O .rodata	00000060 arial16Width
00000bec g     F .text	00000030 led_card
00000e1c g     F .text	00000004 SWI_Routine
00000f90 g     F .text	00000048 rgb
00001338 g     F .text	000000ec line
0000427e g     O .rodata	000001e0 characters
40000030 g     O .bss	00000800 soundBuf
0000415e g     O .rodata	000000c0 arial32Offset
0000072c g     F .text	00000014 video_stop
40005854 g       *ABS*	00000000 _ebss
00000a30 g     F .text	00000134 audio_fill_buf
0000011c g     F .text	00000028 ms_time
00000e18 g     F .text	00000004 FIQ_Routine
40000020 g     O .bss	00000004 newLine
00000ce8 g     F .text	0000001c get_char
00002a42 g     O .rodata	000000c0 arial16Offset
00001570 g     O .rodata	00000100 triTable
00001670 g     O .rodata	00000100 sineTable
00001424 g     F .text	0000014c circle
40000018 g       .bss	00000000 _bss
00000000 g       .text	00000000 _start
00000b64 g     F .text	0000002c led_board_init
000012a8 g     F .text	00000090 put_char_small
00000e50 g     F .text	00000054 put_pixel
000011b8 g     F .text	000000f0 put_char_arial16
0000239a g     O .rodata	000000c0 arial24Offset
00000170 g     F .text	0000045c main
00000c1c g     F .text	0000006c delay_ms
00000c88 g     F .text	00000060 delay_ticks
000024ba g     O .rodata	00000588 arial16
00000d04 g     F .text	0000001c feed
00001770 g     O .rodata	00000c2a arial24
4000001c g     O .bss	00000004 lineCount
40000018 g     O .bss	00000004 imageVindex
00000e14 g     F .text	00000004 IRQ_Routine
00000900 g     F .text	000000e8 fiq_handler
40000000 g       .data	00000000 _data
00000df4 g     F .text	00000010 enableIRQ
00000ea4 g     F .text	00000004 get_pixel
40000018 g       *ABS*	00000000 _edata
40005854 g       *ABS*	00000000 _end
00000a00 g     F .text	00000030 synth_voice
40000028 g     O .bss	00000004 soundBufR
00000ef8 g     F .text	00000044 invert_screen
00000bbc g     F .text	00000030 led_board
00000e04 g     F .text	00000010 disableIRQ
00000d20 g     F .text	000000d4 Initialize
000005cc g     F .text	00000160 video_init
40005850 g     O .bss	00000004 sample
00000fd8 g     F .text	000000f0 put_char_arial32


